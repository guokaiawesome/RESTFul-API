<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.monster.demo.dao.employee.EmployeeSensitiveInfoMapper">
  <resultMap id="BaseResultMap" type="com.monster.demo.pojo.po.employee.EmployeeSensitiveInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="id_card_no_encrypt" jdbcType="VARCHAR" property="idCardNoEncrypt" />
    <result column="phone_no_encrypt" jdbcType="VARCHAR" property="phoneNoEncrypt" />
    <result column="email_encrypt" jdbcType="VARCHAR" property="emailEncrypt" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>
  <sql id="Base_Column_List">
    id, id_card_no_encrypt, phone_no_encrypt, email_encrypt, gmt_create, gmt_modified
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee_sensitive_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from employee_sensitive_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.monster.demo.pojo.po.employee.EmployeeSensitiveInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into employee_sensitive_info (id_card_no_encrypt, phone_no_encrypt, 
      email_encrypt, gmt_create, gmt_modified
      )
    values (#{idCardNoEncrypt,jdbcType=VARCHAR}, #{phoneNoEncrypt,jdbcType=VARCHAR}, 
      #{emailEncrypt,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.monster.demo.pojo.po.employee.EmployeeSensitiveInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into employee_sensitive_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="idCardNoEncrypt != null">
        id_card_no_encrypt,
      </if>
      <if test="phoneNoEncrypt != null">
        phone_no_encrypt,
      </if>
      <if test="emailEncrypt != null">
        email_encrypt,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="idCardNoEncrypt != null">
        #{idCardNoEncrypt,jdbcType=VARCHAR},
      </if>
      <if test="phoneNoEncrypt != null">
        #{phoneNoEncrypt,jdbcType=VARCHAR},
      </if>
      <if test="emailEncrypt != null">
        #{emailEncrypt,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.monster.demo.pojo.po.employee.EmployeeSensitiveInfo">
    update employee_sensitive_info
    <set>
      <if test="idCardNoEncrypt != null">
        id_card_no_encrypt = #{idCardNoEncrypt,jdbcType=VARCHAR},
      </if>
      <if test="phoneNoEncrypt != null">
        phone_no_encrypt = #{phoneNoEncrypt,jdbcType=VARCHAR},
      </if>
      <if test="emailEncrypt != null">
        email_encrypt = #{emailEncrypt,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.monster.demo.pojo.po.employee.EmployeeSensitiveInfo">
    update employee_sensitive_info
    set id_card_no_encrypt = #{idCardNoEncrypt,jdbcType=VARCHAR},
      phone_no_encrypt = #{phoneNoEncrypt,jdbcType=VARCHAR},
      email_encrypt = #{emailEncrypt,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>